# ggplot(windowData[windowData$Chromosome == "chr9",])+
ggplot(windowData)+
geom_rect(aes(xmin = Start,xmax = End, ymin = 0, ymax = repDensity))+
facet_wrap(Chromosome  ~., scales = "free")
invRates<-read.table("analysis/20220302_LocationPatterns/20220311_invrecValues/inversionRates.csv", header = T)
View(invRates)
setwd("~/Documents/PHD_Repos/20211117_PopRecombination")
invRates<-read.table("analysis/20220302_LocationPatterns/20220314_invrecValuespvalues/inversionRates.csv", header = T)
View(invRates)
invRates<-read.table("analysis/20220302_LocationPatterns/20220314_invrecValuespvalues/inversionRates.csv", header = T)
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()
library(ggplot2)
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25)
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25, alpha = 0.5)
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25, alpha = 0.2)
ggplot(invRates, aes(x = variable, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5, aes(color = Chromosome))+
scale_color_manual(values = c(rep("#3c7ae7",11),rep("#89b23e",11) ))+
# Adjust coordinates
coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = variable, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
scale_color_manual(values = c(rep("#3c7ae7",11),rep("#89b23e",11) ))+
# Adjust coordinates
coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = variable, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~Origin_fixed )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = variable, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~OriginFixed )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = variable, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~OriginFixed )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = Origin_fixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates)+geom_point(aes(x = size, y = pvalue))
ggplot(invRates)+geom_point(aes(x = size, y = pvalue))+facet_grid(variable)
ggplot(invRates)+geom_point(aes(x = size, y = pvalue))+facet_grid(variable ~.)
ggplot(invRates)+geom_point(aes(x = size, y = pvalue))+facet_wrap(variable ~.)
ggplot(invRates)+geom_point(aes(x = log10(size), y = pvalue))+facet_wrap(variable ~.)
ggplot(invRates)+geom_point(aes(x = size, y = pvalue))+facet_wrap(variable ~.)
ggplot(invRates,aes(x = size, y = pvalue))+geom_point()+facet_wrap(variable ~.)
ggplot(invRates,aes(x = size, y = pvalue))+
geom_point()+
geom_smooth(alpha=0.3, method="lm")
ggplot(invRates,aes(x = size, y = pvalue))+
geom_point()+
geom_smooth(alpha=0.3, method="lm")+
facet_wrap(variable ~.)
ggplot(invRates,aes(x = size, y = pvalue))+
geom_point()+
geom_smooth(alpha=0.3, method="lm")+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
lm(invRates$size, invRates$pvalue)
library(ggpubr)
ggscatter(invRates, x = OriginFixed, y = pvalue ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(invRates, x = "OriginFixed", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = 3, label.y = 30)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = Inf, label.y = 95)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = 4e+06, label.y = 95)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = 4e+06, label.y = 100)
ggscatter(invRates, x = "size", y = "pvalue" ,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = 4e+06, label.y = 110)
ggscatter(invRates, x = "size", y = "pvalue" ,color = "OriginFixed"
add = "reg.line",  # Add regressin line
ggscatter(invRates, x = "size", y = "pvalue" ,color = "OriginFixed",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(method = "pearson", label.x = 4e+06, label.y = 110)
ggscatter(invRates, x = "size", y = "pvalue" ,color = "OriginFixed",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)+ stat_cor(aes(color = OriginFixed), method = "pearson", label.x = 4e+06, label.y = 110)
sp + stat_cor(aes(color = OriginFixed), label.x = 4e+06)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.x = 4e+06)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.x = 4e+06)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.x = 4e+06)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates, x = "log10(size)", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
invRates$logsizes = log10(invRates$size)
ggscatter(invRates, x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates, x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggscatter(invRates, x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates, x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggscatter(invRates[invRates$value == "inside_WMR"], x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates[invRates$value == "inside_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
invRates$value
ggscatter(invRates[invRates$variable == "inside_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggscatter(invRates[invRates$variable == "inside_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggscatter(invRates[invRates$variable == "left_2invsize_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
invRates$variable
ggscatter(invRates[invRates$variable == "left_2invSize_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25, alpha = 0.2)
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
invRates$logsizes = log10(invRates$size)
ggscatter(invRates[invRates$variable == "left_2invSize_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25, alpha = 0.2)
View(invRates)
invRates<-read.table("analysis/20220302_LocationPatterns/20220317_invrecValuesrankings/inversionRates.csv", header = T)
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("Ranking for recrates in inversions")
ggscatter(invRates[invRates$variable == "left_2invSize_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
invRates<-read.table("analysis/20220302_LocationPatterns/20220314_invrecValuespvalues/inversionRates.csv", header = T)
ggplot(invRates, aes(x = variable, y = pvalue ))+geom_boxplot()+geom_jitter(width = 0.25, alpha = 0.2)
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("P-value for recrates in inversions")
library(ggpubr)
ggscatter(invRates, x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
invRates$logsizes = log10(invRates$size)
ggscatter(invRates[invRates$variable == "left_2invSize_WMR",], x = "logsizes", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "pearson")
ggscatter(invRates[invRates$variable == "inside_WMR"], x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggscatter(invRates[invRates$variable == "inside_WMR",], x = "size", y = "pvalue",
color = "OriginFixed", palette = "jco", facet.by = "OriginFixed",scales = "free_x",
add = "reg.line", conf.int = TRUE)+
stat_cor(aes(color = OriginFixed), label.y = 110, method = "spearman")
ggplot(invRates, aes(x = OriginFixed, y = pvalue ))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5)+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "none")+
# Make grid
facet_grid(.~variable )+
# Title
ggtitle("Ranking for recrates in inversions")
gatResult <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/gat.tsv", sep = "\t", header = T)
gatResult_NH <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NHgat.tsv", sep = "\t", header = T)
gatResult_NAHR <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NAHRgat.tsv", sep = "\t", header = T)
gatResult$track<-"all"
gatResult_NH$track<-"NH"
gatResult_NAHR$track<-"NAHR"
gatResultMerged<-rbind(rbind(gatResult, gatResult_NH), gatResult_NAHR)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
# To add an Ns
holdspots<-read.table("analysis/20220302_LocationPatterns/annotations/20220304_recMapAnnotation/annotations.bed")
holdspot_count<-melt(table(holdspots$V4))
library(reshape2)
gatResult <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/gat.tsv", sep = "\t", header = T)
gatResult_NH <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NHgat.tsv", sep = "\t", header = T)
gatResult_NAHR <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NAHRgat.tsv", sep = "\t", header = T)
gatResult$track<-"all"
gatResult_NH$track<-"NH"
gatResult_NAHR$track<-"NAHR"
gatResultMerged<-rbind(rbind(gatResult, gatResult_NH), gatResult_NAHR)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
# To add an Ns
holdspots<-read.table("analysis/20220302_LocationPatterns/annotations/20220304_recMapAnnotation/annotations.bed")
holdspot_count<-melt(table(holdspots$V4))
hcnamesvec<-paste0(holdspot_count$Var1, "\nn=",holdspot_count$value )
names(hcnamesvec)<-holdspot_count$Var1
inversion_count <- unique(gatResultMerged[,c("track", "track_nsegments")] )
inamesvec<-paste0(inversion_count$track, " n=",inversion_count$track_nsegments )
# names(inamesvec)<-inversion_count$Var1
inamesvec<-paste( inamesvec,  collapse = "; ")
ggplot(gatResultMerged, aes(x = track, y = l2fold))+
geom_bar( stat="identity")+
geom_text(aes(x = track, y = max(l2fold), label = pstars), color ="blue")+
geom_text(aes(x = track, y = max(l2fold)+1, label = qstars), color = "red")+
facet_wrap(annotation  ~ .,  labeller = labeller(annotation=hcnamesvec) )+
scale_colour_manual(name="Significance",values=c("pvalue", "qvalue"), palette = c("blue", "red"))+
ylab("log2( Fold change )")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in CEU\n", inamesvec))
library(reshape2)
library(ggplot2)
gatResult <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/gat.tsv", sep = "\t", header = T)
gatResult_NH <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NHgat.tsv", sep = "\t", header = T)
gatResult_NAHR <- read.table("analysis/20220302_LocationPatterns/GATrun/20220304_GAT/NAHRgat.tsv", sep = "\t", header = T)
gatResult$track<-"all"
gatResult_NH$track<-"NH"
gatResult_NAHR$track<-"NAHR"
gatResultMerged<-rbind(rbind(gatResult, gatResult_NH), gatResult_NAHR)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
# To add an Ns
holdspots<-read.table("analysis/20220302_LocationPatterns/annotations/20220304_recMapAnnotation/annotations.bed")
holdspot_count<-melt(table(holdspots$V4))
hcnamesvec<-paste0(holdspot_count$Var1, "\nn=",holdspot_count$value )
names(hcnamesvec)<-holdspot_count$Var1
inversion_count <- unique(gatResultMerged[,c("track", "track_nsegments")] )
inamesvec<-paste0(inversion_count$track, " n=",inversion_count$track_nsegments )
# names(inamesvec)<-inversion_count$Var1
inamesvec<-paste( inamesvec,  collapse = "; ")
ggplot(gatResultMerged, aes(x = track, y = l2fold))+
geom_bar( stat="identity")+
geom_text(aes(x = track, y = max(l2fold), label = pstars), color ="blue")+
geom_text(aes(x = track, y = max(l2fold)+1, label = qstars), color = "red")+
facet_wrap(annotation  ~ .,  labeller = labeller(annotation=hcnamesvec) )+
scale_colour_manual(name="Significance",values=c("pvalue", "qvalue"), palette = c("blue", "red"))+
ylab("log2( Fold change )")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in CEU\n", inamesvec))
ggplot(gatResultMerged)+
geom_pointrange(aes(x = track, y = expected, ymin=CI95low, ymax = CI95high))+
geom_point(aes(x = track, y = observed) , shape = 4, size = 3)+
geom_text(aes(x = track, y = starpos.aggregated*1.1, label = pstars), color ="blue")+
geom_text(aes(x = track, y =  starpos.aggregated*1.2, label = qstars), color = "red")+
facet_wrap(annotation  ~ .,  labeller = labeller(annotation=hcnamesvec) , scales = "free")+
ylab("Annotations overlapping with segments\n(Nucleotide counts)")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in CEU\n", inamesvec))
0.915254 + 0.375
0.531532 + 0.570248
