summary(mod)
## Store summary table
ctable <- coef(summary(mod))
## Calculate and store p values
p <- round(pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2, 8)
## combined table
ctable <- cbind(ctable, "p value" = p)
knitr::kable(ctable)
# print("Profiling likelihod")
# (ci <- confint(mod)) # default method gives profiled CIs
# print("Assuming a normal distribtuion")
ci<-confint.default(mod) # CIs assuming normality
knitr::kable(ci)
CIodds<-data.frame(exp(cbind(OR = coef(mod), ci)))
colnames(CIodds)<-c("Odds Ratio", "2.5%", "97.5%")
knitr::kable(CIodds)
pacman::p_load("ggplot2")
# Finally, a summary of the model
CIodds$Variable<-rownames(CIodds)
ctable<-data.frame(ctable)
ctable$Variable<-rownames(ctable)
CIodds<-merge(CIodds, ctable)
CIodds$sig<-ifelse(CIodds$p.value < 0.05, T, F)
ggplot(CIodds)+geom_point(aes(x = Variable, y = `Odds Ratio`) )+
geom_errorbar(aes(ymin=`2.5%`, ymax=`97.5%`, x=Variable), width=.1, alpha = 0.5)+
geom_text(aes(x = Variable, y = Inf, label = round(p.value, 3), color = sig), vjust = 1.5, size = 3)+
scale_color_manual(values=c("FALSE"="black","TRUE"="red"))+
theme(legend.position = "none")+
geom_hline(yintercept=1, width=.1, alpha = 0.3)+
ggtitle("Odds ratios calculated from coefficients")
pacman::p_load("brant", "Hmisc")
btest<-brant(mod)
knitr::kable(btest)
pacman::p_load("Hmisc", "reshape2")
# Estimate values that will be graphed
sf <- function(y) {
nmax<-length(levels(winRegions[,yVar]))-1
vec<-c()
names<-c()
for (n in c(0:nmax)){
names <- c(names, paste0("Y>=",n))
vec<-c(vec, qlogis(mean( y >= n)))
}
names(vec)<-names
return(vec)
}
# Call function sf on several subsets of the data defined by the predictors
winRegions$numVar<-winRegions[,yVar]
levels(winRegions$numVar) <- c(1:length(levels(winRegions$numVar)))-1
winRegions$numVar <-as.numeric(as.character(winRegions$numVar))
s<-summary(as.formula(paste0("numVar ~ ", xVars)), data=winRegions, fun=sf)
# Get column names
namevec<-attributes(s)$vname
for(n in c(1:length(namevec))){  ifelse(namevec[n]=="", namevec[n] <- stored, stored <-namevec[n]) }
# Transform to dataframe
df<-data.frame(unclass(s))
df$categValues<-rownames(df)
df$categories<-namevec
# Melt dataframe
mdf<-melt(df, id.vars = c("categValues", "categories", "N"))
#Generate variable levels
cat<-unique(winRegions[,yVar])
cat<-cat[order(cat)]
ncat <- length(levels(winRegions[,yVar]))-1 # number of categories
varlevels<-c(">=0")
for(n in c(1:ncat)){varlevels <- c(varlevels, paste0( paste(cat[c(1:n)], collapse = "+"), " vs ", paste(cat[c((n+1):length(cat))], collapse = "+")))}
levels(mdf$variable)<-varlevels
# Plot
ggplot(mdf[mdf$categories !="Overall" & mdf$variable != ">=0",], aes(x = categValues, y = (value), color=variable, group = variable))+
geom_point()+geom_line()+
facet_wrap(categories~., scales = "free")+
scale_color_manual(values = c("#440154","#31688e","#35b779" ))+ #, "#fde725"
ggtitle("Proportional odds visual test")+
ylab("Log Odds Ratio")+xlab("")+
guides(color=guide_legend(title=yVar))+ theme(legend.position = "top", axis.text.x = element_text(size=8))
myFormula
if (!require("pacman")) install.packages("pacman")
# set conditions for code output
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE,fig.pos = "!H")
showcode=FALSE #for include or echo - echo=showcode // include=showcode
runbash=FALSE # for eval=runbash
runR=TRUE #for eval=runR
# Setup
pacman::p_load(ggplot2)
name <-"CEUSpence_COzones_0.03_1000000"
divChroms <- paste0("data/divideChromosomes/",name,"/")
# PATHS
windowsFile <- paste0(divChroms,"/windows.txt")
densityFile <- paste0(divChroms,"/densities.txt")
extremesFile <- paste0(divChroms,"/extremes.txt")
centroFile <- paste0(divChroms,"/workspace.txt")
# FILES
windows <- read.table(windowsFile, header = T, sep = "\t")
windows$Color <- "a"
windows[as.numeric(rownames(windows)) %% 2 == 1,"Color"]<-"b"
windows$Chromosome <- factor(windows$Chromosome, levels =  paste(rep("chr", 23), as.character(c(c(1:22),"X")), sep = ""))
density <- read.table(densityFile, header = T, sep = "\t")
density$Chromosome <- factor(density$Chromosome, levels = paste(rep("chr", 23), as.character(c(c(1:22),"X")), sep = ""))
extremes <- read.table(extremesFile, header = T, sep = "\t")
extremes$Chromosome <- factor(extremes$Chromosome, levels = paste(rep("chr", 23), as.character(c(c(1:22),"X")), sep = ""))
centromeres <- read.table(centroFile, header = T, sep = "\t")
centromeres$Chromosome <- factor(centromeres$Chromosome, levels =  paste(rep("chr", 23), as.character(c(c(1:22),"X")), sep = ""))
armLimits <-centromeres[grep("cen", centromeres$chromID,invert = T),]
centromeres<-centromeres[grep("cen", centromeres$chromID),]
starts <-  armLimits[grep("p", armLimits$chromID), c("Start", "Chromosome")]
ends<- armLimits[grep("q", armLimits$chromID), c("End", "Chromosome")]
d_rowlist<-c()
c_rowlist<-c()
for (c in unique(starts$Chromosome)) {
cStart <-min(extremes[extremes$Chromosome ==c, "pos"])
starts<- starts[ !(starts$Chromosome == c & starts$Start < cStart), ] # chromosome start will be first minimum
windows[windows$Chromosome ==c & windows$Start < cStart,"Start" ]<-cStart #window start may be affected
d_rowlist<-c(d_rowlist,rownames(density[density$Chromosome ==c & density$pos < cStart,])) #some densities will disappear
c_rowlist<-c(c_rowlist,rownames(centromeres[centromeres$Chromosome ==c & centromeres$Start < cStart,])) # if starts with centromere will disappear
}
density<-density[!(rownames(density) %in% d_rowlist),]
centromeres<-centromeres[!(rownames(centromeres) %in% c_rowlist),]
# PLOT
ggplot()+
geom_rect(data= centromeres,  aes(xmin = Start, xmax = End,  ymin = 0, ymax = Inf), fill = "blue4", alpha = 0.5)+
geom_vline(data=starts, aes(xintercept = Start), color = "orange")+geom_vline(data=ends, aes(xintercept = End), color = "orange")+
geom_rect(data=windows, aes(xmin = Start, xmax = End, fill = Color, ymin = 0, ymax = Inf), alpha = 0.3)+
geom_line(data=density,aes(x = pos, y = val))+
geom_point(data=extremes, aes(x = pos, y = val, color = Type))+
facet_wrap("Chromosome", scales  = "free", ncol=4)+
scale_fill_manual(values=c("#737373", "#e1e5eb"), guide="none")+
scale_color_manual(values = c("#bd2b43", "#2b63bd"), guide = "none")+
scale_y_continuous(labels=function(x)x*1000000)+
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.text.y = element_text(size = 5))+
ylab("Rate (cM/Mb)")+xlab("Position")+ggtitle(name)
windows <- data.frame()
for (chrom in unique(extremes$Chromosome)) {
# Sort extrema
extremes_c<- extremes[which(extremes$Chromosome == chrom) ,]
extremes_c<-extremes_c[order(extremes_c$pos),]
# Chromosome extremes
teloExtremes<-extremes_c$pos[c(1,nrow(extremes_c))]
# Telomeres threshold option A (midpoint between Max and Min)
teloMidsA<-c((extremes_c$pos[2]+extremes_c$pos[3])/2, (extremes_c$pos[nrow(extremes_c)-1]+extremes_c$pos[nrow(extremes_c)-2])/2)
telomeric<-data.frame(pos=c(teloExtremes, teloMidsA), Chromosome = chrom)
telomeric<-telomeric[order(telomeric$pos),]
# Centromeres
centromeric <- centromeres[centromeres$Chromosome == chrom,]
if (nrow(centromeric) != 0){
leftMax<-max(extremes_c[which(extremes_c$pos <= centromeric$Start & extremes_c$Type == "Maxima"), "pos"])
rightMax<-min(extremes_c[which(extremes_c$pos >= centromeric$End & extremes_c$Type == "Maxima"), "pos"])
centromeric$Start<- (centromeric$Start + leftMax)/2
centromeric$End<-(centromeric$End + rightMax)/2
}
# Overlaps
if (nrow(centromeric) != 0){
#Average centromeres
teloend<- telomeric$pos[2]
telomeric$pos[2]<-ifelse(teloend>=centromeric$Start,  centromeric$Start , teloend)
telostart<-telomeric$pos[3]
telomeric$pos[3]<-ifelse(telostart<=centromeric$End, centromeric$End, telostart )
}
# Delete first telomere if necessary
if (nrow(centromeric) == 0){
telomeric<-telomeric[c(1,3,4),]
}
#Positions
positions<-unique(c(telomeric$pos, centromeric$Start, centromeric$End))
positions<-positions[order(positions)]
chromwins<-data.frame(Start = positions[1:length(positions)-1], End = positions[2:length(positions)], Chromosome = chrom)
chromwins$Color<- "arm"
if (nrow(centromeric) != 0){
chromwins[chromwins$Start %in% telomeric[c(1,3), "pos"],"Color"]<-"telomeric"
chromwins[chromwins$Start == centromeric$Start,"Color"]<-"centromeric"
# Divide centromeric in two
cenBis<-chromwins[chromwins$Color == "centromeric",]
chromwins[chromwins$Color == "centromeric","End"] <- centromeres[centromeres$Chromosome == chrom,"Start"]
cenBis$Start <- centromeres[centromeres$Chromosome == chrom,"End"]
chromwins<-rbind(chromwins, cenBis)
}else{
chromwins[chromwins$Start %in% telomeric[c(2), "pos"],"Color"]<-"telomeric"
}
windows <- rbind(windows,chromwins)
}
# write.table(windows, "data/windows.txt", quote = F, row.names = F, col.names = T, sep = "\t")
ggplot()+
# geom_rect(data= centromeres,  aes(xmin = Start, xmax = End,  ymin = 0, ymax = Inf), fill = "blue4", alpha = 0.5)+
geom_vline(data=starts, aes(xintercept = Start), color = "orange")+geom_vline(data=ends, aes(xintercept = End), color = "orange")+
geom_rect(data=windows, aes(xmin = Start, xmax = End, fill = Color, ymin = 0, ymax = Inf), alpha = 0.3)+
geom_line(data=density,aes(x = pos, y = val))+
geom_point(data=extremes, aes(x = pos, y = val, color = Type))+
facet_wrap("Chromosome", scales = "free", ncol = 4)+
# scale_fill_manual(values=c("#737373", "#e1e5eb"), guide="none")+
scale_color_manual(values = c("#bd2b43", "#2b63bd"), guide = "none")+
scale_y_continuous(labels=function(x)x*1000000)+
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),axis.text.y = element_text(size = 5), legend.position = "top")+
ylab("Rate (cM/Mb)")+xlab("Position")+ggtitle(name)
pacman::p_load(ggdist, ggplot2, gghalves, reshape2, patchwork)
#Look for size outliers
sizes<-windows$End-windows$Start
ggplot(windows, aes(y = "Sizes",  End-Start))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5, aes(color = Color))+
# scale_color_manual(values = c(rep("#3c7ae7",11),rep("#89b23e",11) ))+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "top")+
facet_grid(Color~., margins=TRUE)+
# Title
ggtitle("Distribution")
# So what happend if I divide each "arm" window in 2
windows_telocen<-windows[windows$Color != "arm",]
windows_arm<-windows[windows$Color == "arm",]
windows_arm$half<-(windows_arm$End+windows_arm$Start)/2
windows_arm_alpha<-windows_arm[,c("Start", "half", "Chromosome", "Color")]
windows_arm_beta<-windows_arm[,c("half", "End", "Chromosome", "Color")]
colnames(windows_arm_alpha)<-colnames(windows)
colnames(windows_arm_beta)<-colnames(windows)
windows_halved<-rbind(rbind(windows_telocen, windows_arm_alpha), windows_arm_beta)
ggplot(windows_halved, aes(y = "Sizes",  End-Start))+
# Half violin
ggdist::stat_halfeye(adjust = .5, width = .6, .width = 0, justification = -.2, point_colour = NA) +
# Boxplot
geom_boxplot(width = .1, outlier.shape = NA) +
# Points
gghalves::geom_half_point_panel(side = "l", range_scale = .6,  alpha = .5, aes(color = Color))+
# scale_color_manual(values = c(rep("#3c7ae7",11),rep("#89b23e",11) ))+
# Adjust coordinates
# coord_flip()+
# coord_flip( xlim = c(1.3, NA))+
# Adjust labels
theme(axis.title.y = element_blank(), legend.position = "top")+
facet_grid(Color~., margins=TRUE)+
# Title
ggtitle("Distribution")
write.table(windows_halved, "data/windows.txt", quote = F, row.names = F, col.names = T, sep = "\t")
rep<-read.table("data/genomicSuperDups_coords.bed", header = T)
inv<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
colnames(inv)<-colnames(rep)
rep$center<-(rep$chromStart+rep$chromEnd)/2
chromnames<- paste0("chr", c(0:22))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
library(gpglot2)
library(ggplot2)
rep<-read.table("data/genomicSuperDups_coords.bed", header = T)
inv<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
colnames(inv)<-colnames(rep)
rep$center<-(rep$chromStart+rep$chromEnd)/2
chromnames<- paste0("chr", c(0:22))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
density(rep[rep$chrom %in% chromnames,"center"])
inv$density<-
apply(inv, 1, function(x){
invStart <- as.numeric(x["chromStart"])
invEnd<- as.numeric(x["chromEnd"])
d<-density(rep[as.character(rep$chrom) == x["chrom"],"center"])
val<-mean(approx(d$x, d$y, xout = c(invStart:invEnd))$y)
val
} )
inv$nucOverlap<-
apply(inv, 1, function(x){
invStart <- as.numeric(x["chromStart"])
invEnd<- as.numeric(x["chromEnd"])
repC<-rep[as.character(rep$chrom) == x["chrom"],]
repO<-unique(repC[( (  repC$chromEnd %in% c(invStart:invEnd)  )  |
(  repC$chromStart %in% c(invStart:invEnd) ) |
(  repC$chromStart < invStart&  repC$chromEnd > invEnd )
), ])
repO[repO$chromStart < invStart , "chromStart"]<-invStart
repO[repO$chromEnd > invEnd , "chromEnd"]<-invEnd
repO$size<-repO$chromEnd - repO$chromStart
sum(repO$size)
})
invNAHR<-inv
# ---
rep<-read.table("data/genomicSuperDups_coords.bed", header = T)
inv<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NHinvs.bed", header = F)
colnames(inv)<-colnames(rep)
rep$center<-(rep$chromStart+rep$chromEnd)/2
chromnames<- paste0("chr", c(0:22))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
density(rep[rep$chrom %in% chromnames,"center"])
inv$density<-
apply(inv, 1, function(x){
invStart <- as.numeric(x["chromStart"])
invEnd<- as.numeric(x["chromEnd"])
d<-density(rep[as.character(rep$chrom) == x["chrom"],"center"])
val<-mean(approx(d$x, d$y, xout = c(invStart:invEnd))$y)
val
} )
inv$nucOverlap<-
apply(inv, 1, function(x){
invStart <- as.numeric(x["chromStart"])
invEnd<- as.numeric(x["chromEnd"])
repC<-rep[as.character(rep$chrom) == x["chrom"],]
repO<-unique(repC[( (  repC$chromEnd %in% c(invStart:invEnd)  )  |
(  repC$chromStart %in% c(invStart:invEnd) ) |
(  repC$chromStart < invStart&  repC$chromEnd > invEnd )
), ])
repO[repO$chromStart < invStart , "chromStart"]<-invStart
repO[repO$chromEnd > invEnd , "chromEnd"]<-invEnd
repO$size<-repO$chromEnd - repO$chromStart
sum(repO$size)
})
invNH<-inv
# --
invNAHR$Type<-"NAHR"
invNH$Type<-"NH"
inv<-rbind(invNAHR, invNH)
ggplot(inv)+geom_boxplot(aes(x = Type, y = density))
ggplot(inv)+geom_boxplot(aes(x = Type, y = log10(nucOverlap)))
ggplot(inv)+geom_boxplot(aes(x = Type, y =nucOverlap))
ggplot(inv[inv$NA != "HsInv0501"])+geom_boxplot(aes(x = Type, y =nucOverlap))
ggplot(inv[inv$NA != "HsInv0501",])+geom_boxplot(aes(x = Type, y =nucOverlap))
inv[inv$NA != "HsInv0501",]
ggplot(inv[inv$`NA` != "HsInv0501",])+geom_boxplot(aes(x = Type, y =nucOverlap))
summary(inv$nucOverlap ~ inv$Type)
summary(inv$nucOverlap ~ inv$Type, mean)
summary(nucOverlap ~ Type, inv, mean)
summary(nucOverlap ~ Type, inv, mean)
summary(nucOverlap, inv, mean)
summary(nucOverlap, inv)
summary(inv$nucOverlap)
hist(inv$nucOverap)
inv$nucOverap
hist(inv$nucOverlap)
hist(log10(inv$nucOverlap))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
win<-read.table("analysis/20220621_LocationPatterns/GATfiles/Isochores/genomicSuperDups_COzones_0.01/windows.txt")
View(win)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(win, aes(xmin = start, xmax = end, color = type, ymin = 0, ymax = Inf) )+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
colnames(win)<-c("chrom", "start", "end", "type")
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(win, aes(xmin = start, xmax = end, color = type, ymin = 0, ymax = Inf) )+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, color = type, ymin = 0, ymax = Inf) )+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
win<-read.table("analysis/20220621_LocationPatterns/GATfiles/Isochores/genomicSuperDups_COzones_0.1/windows.txt")
colnames(win)<-c("chrom", "start", "end", "type")
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = inv, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
invNH<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NHinvs.bed", header = F)
invNAHR<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = invNH, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)+
geom_vline(data = invNAHR, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)
colnames(inv)<-colnames(invNH)<-colnames(invNAHR)<-colnames(rep)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = invNH, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)+
geom_vline(data = invNAHR, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)
rep<-read.table("data/genomicSuperDups_coords.bed", header = T)
inv<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
invNH<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NHinvs.bed", header = F)
invNAHR<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
win<-read.table("analysis/20220621_LocationPatterns/GATfiles/Isochores/genomicSuperDups_COzones_0.1/windows.txt")
colnames(win)<-c("chrom", "start", "end", "type")
colnames(inv)<-colnames(invNH)<-colnames(invNAHR)<-colnames(rep)
rep$center<-(rep$chromStart+rep$chromEnd)/2
chromnames<- paste0("chr", c(0:22))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = invNH, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)+
geom_vline(data = invNAHR, aes(xintercept = (chromStart + chromEnd)/2 ), color = "bllue", alpha = 0.5)
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = invNH, aes(xintercept = (chromStart + chromEnd)/2 ), color = "blue", alpha = 0.5)+
geom_vline(data = invNAHR, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
library(ggplot2)
rep<-read.table("data/genomicSuperDups_coords.bed", header = T)
inv<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
invNH<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NHinvs.bed", header = F)
invNAHR<-read.table("analysis/20220621_LocationPatterns/GATfiles/Segments/NAHRinvs.bed", header = F)
win<-read.table("analysis/20220621_LocationPatterns/GATfiles/Isochores/genomicSuperDups_COzones_0.09/windows.txt")
colnames(win)<-c("chrom", "start", "end", "type")
colnames(inv)<-colnames(invNH)<-colnames(invNAHR)<-colnames(rep)
rep$center<-(rep$chromStart+rep$chromEnd)/2
chromnames<- paste0("chr", c(0:22))
ggplot()+geom_density(data = rep[rep$chrom %in% chromnames,], aes(center))+
geom_rect(data =win, aes(xmin = start, xmax = end, fill = type, ymin = 0, ymax = Inf) , alpha = 0.5)+
facet_wrap(chrom ~ ., scales = "free_x")+
geom_vline(data = invNH, aes(xintercept = (chromStart + chromEnd)/2 ), color = "blue", alpha = 0.5)+
geom_vline(data = invNAHR, aes(xintercept = (chromStart + chromEnd)/2 ), color = "red", alpha = 0.5)
pacman::p_load(reshape2, ggplot2, gridExtra)
desc<-"WorkspaceHigh0.09_noX"
date<-"20220621"
conditions <-c("avgBherer", "femBherer", "CEUSpence")
figscale <- 3
for (condition in conditions){
gatResultMerged <- read.table(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".tsv"), sep = "\t", header = T)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
plot1<-ggplot(gatResultMerged, aes(x = track, y = l2fold))+
geom_bar( stat="identity")+
geom_text(aes(x = track, y = max(l2fold), label = pstars), color ="blue")+
geom_text(aes(x = track, y = max(l2fold)+1, label = qstars), color = "red")+
facet_wrap(annotation  ~ . )+
scale_colour_manual(name="Significance",values=c("pvalue", "qvalue"), palette = c("blue", "red"))+
ylab("log2( Fold change )")+
xlab("Segment tracks")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
plot2<- ggplot(gatResultMerged)+
geom_pointrange(aes(x = track, y = expected, ymin=CI95low, ymax = CI95high))+
geom_point(aes(x = track, y = observed) , shape = 4, size = 3)+
geom_text(aes(x = track, y = starpos.aggregated*1.1, label = pstars), color ="blue")+
geom_text(aes(x = track, y =  starpos.aggregated*1.2, label = qstars), color = "red")+
facet_wrap(annotation  ~ ., scales = "free")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Annotations overlappifng with segments\n(Nucleotide counts)")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
ggsave(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".png"),  grid.arrange(plot1, plot2), width=2480, height=3508, units = "px" , scale = 1.5)
}
pacman::p_load(reshape2, ggplot2, gridExtra)
desc<-"WorkspaceHigh0.1_noX"
date<-"20220621"
conditions <-c("avgBherer", "femBherer", "CEUSpence")
figscale <- 3
for (condition in conditions){
gatResultMerged <- read.table(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".tsv"), sep = "\t", header = T)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
plot1<-ggplot(gatResultMerged, aes(x = track, y = l2fold))+
geom_bar( stat="identity")+
geom_text(aes(x = track, y = max(l2fold), label = pstars), color ="blue")+
geom_text(aes(x = track, y = max(l2fold)+1, label = qstars), color = "red")+
facet_wrap(annotation  ~ . )+
scale_colour_manual(name="Significance",values=c("pvalue", "qvalue"), palette = c("blue", "red"))+
ylab("log2( Fold change )")+
xlab("Segment tracks")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
plot2<- ggplot(gatResultMerged)+
geom_pointrange(aes(x = track, y = expected, ymin=CI95low, ymax = CI95high))+
geom_point(aes(x = track, y = observed) , shape = 4, size = 3)+
geom_text(aes(x = track, y = starpos.aggregated*1.1, label = pstars), color ="blue")+
geom_text(aes(x = track, y =  starpos.aggregated*1.2, label = qstars), color = "red")+
facet_wrap(annotation  ~ ., scales = "free")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Annotations overlappifng with segments\n(Nucleotide counts)")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
ggsave(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".png"),  grid.arrange(plot1, plot2), width=2480, height=3508, units = "px" , scale = 1.5)
}
pacman::p_load(reshape2, ggplot2, gridExtra)
desc<-"WorkspaceHigh0.09_noX"
date<-"20220621"
conditions <-c("avgBherer", "femBherer", "CEUSpence")
figscale <- 3
for (condition in conditions){
gatResultMerged <- read.table(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".tsv"), sep = "\t", header = T)
# To add stars
gatResultMerged$pstars<-ifelse(gatResultMerged$pvalue <= 0.05, ifelse(gatResultMerged$pvalue <= 0.01, ifelse(gatResultMerged$pvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$qstars<-ifelse(gatResultMerged$qvalue <= 0.05, ifelse(gatResultMerged$qvalue <= 0.01, ifelse(gatResultMerged$qvalue<= 0.001, "***", "**"), "*" ),"")
gatResultMerged$starpos<-ifelse(gatResultMerged$observed< gatResultMerged$CI95high,gatResultMerged$CI95high,gatResultMerged$observed )
gatResultMerged<-merge(gatResultMerged,aggregate(starpos~ annotation, gatResultMerged, "max")  , by = "annotation", all.x = TRUE, suffixes = c(".simple", ".aggregated"))
plot1<-ggplot(gatResultMerged, aes(x = track, y = l2fold))+
geom_bar( stat="identity")+
geom_text(aes(x = track, y = max(l2fold), label = pstars), color ="blue")+
geom_text(aes(x = track, y = max(l2fold)+1, label = qstars), color = "red")+
facet_wrap(annotation  ~ . )+
scale_colour_manual(name="Significance",values=c("pvalue", "qvalue"), palette = c("blue", "red"))+
ylab("log2( Fold change )")+
xlab("Segment tracks")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
plot2<- ggplot(gatResultMerged)+
geom_pointrange(aes(x = track, y = expected, ymin=CI95low, ymax = CI95high))+
geom_point(aes(x = track, y = observed) , shape = 4, size = 3)+
geom_text(aes(x = track, y = starpos.aggregated*1.1, label = pstars), color ="blue")+
geom_text(aes(x = track, y =  starpos.aggregated*1.2, label = qstars), color = "red")+
facet_wrap(annotation  ~ ., scales = "free")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Annotations overlappifng with segments\n(Nucleotide counts)")+
xlab("Segment tracks")+
ggtitle(paste0("Summarized GAT result: Inversions vs. ERRs in ",condition))
ggsave(paste0("analysis/",date,"_LocationPatterns/GATresults/",desc,"/",condition,".png"),  grid.arrange(plot1, plot2), width=2480, height=3508, units = "px" , scale = 1.5)
}
k
